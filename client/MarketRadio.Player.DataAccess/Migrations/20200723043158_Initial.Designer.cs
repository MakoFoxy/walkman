// <auto-generated />
using System;
using MarketRadio.Player.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarketRadio.Player.DataAccess.Migrations
{
    [DbContext(typeof(PlayerContext))]
    [Migration("20200723043158_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("MarketRadio.Player.DataAccess.Domain.Object", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("MarketRadio.Player.DataAccess.Domain.ObjectInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("BeginTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bin")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ObjectInfos");
                });

            modelBuilder.Entity("MarketRadio.Player.DataAccess.Domain.PendingRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("HttpMethod")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PendingRequest");
                });

            modelBuilder.Entity("MarketRadio.Player.DataAccess.Domain.Playlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Overloaded")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("MarketRadio.Player.DataAccess.Domain.PlaylistTrack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlayingDateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlaylistId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("TrackId");

                    b.ToTable("PlaylistTracks");
                });

            modelBuilder.Entity("MarketRadio.Player.DataAccess.Domain.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .HasColumnType("TEXT");

                    b.Property<double>("Length")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("MarketRadio.Player.DataAccess.Domain.ObjectInfo", b =>
                {
                    b.OwnsOne("MarketRadio.Player.DataAccess.Domain.City", "City", b1 =>
                        {
                            b1.Property<Guid>("ObjectInfoId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .HasColumnType("TEXT");

                            b1.HasKey("ObjectInfoId");

                            b1.ToTable("ObjectInfos");

                            b1.WithOwner()
                                .HasForeignKey("ObjectInfoId");
                        });

                    b.OwnsOne("MarketRadio.Player.DataAccess.Domain.Settings", "Settings", b1 =>
                        {
                            b1.Property<Guid>("ObjectInfoId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("AdvertVolume")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsOnTop")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("MusicVolume")
                                .HasColumnType("TEXT");

                            b1.Property<int>("SilentTime")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ObjectInfoId");

                            b1.ToTable("ObjectInfos");

                            b1.WithOwner()
                                .HasForeignKey("ObjectInfoId");
                        });
                });

            modelBuilder.Entity("MarketRadio.Player.DataAccess.Domain.PlaylistTrack", b =>
                {
                    b.HasOne("MarketRadio.Player.DataAccess.Domain.Playlist", "Playlist")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketRadio.Player.DataAccess.Domain.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
