using System.Text.RegularExpressions;

namespace MarketRadio.Player.Helpers
{// В этом фрагменте кода представлен частичный статический класс PathHelper, который включает в себя методы для работы с путями файловой системы. Основная функция этого класса — очистка имен файлов от символов, которые не могут быть использованы в именах файлов и папок в большинстве операционных систем. Давайте разберем ключевые элементы:
    public static partial class PathHelper
    {
        [GeneratedRegex(":|<|>|\"|\\/|\\\\|\\||\\?|\\*")] //Используется для создания скомпилированного регулярного выражения из литерала строки. Это новая возможность в .NET 6 и более поздних версиях, позволяющая улучшить производительность путем компиляции регулярных выражений во время компиляции исходного кода.Регулярное выражение ":|<|>|\"|\\/|\\\\|\\||\\?|\\*" предназначено для поиска символов, которые обычно запрещены в именах файлов и папок: :, <, >, ", /, \, |, ?, *.
        private static partial Regex EscapeRegex(); //    Это частичный метод, который должен быть автоматически сгенерирован компилятором на основе атрибута [GeneratedRegex]. Этот метод возвращает экземпляр Regex, соответствующий заданному регулярному выражению.

        public static string ToSafeName(string filename)
        {
            return EscapeRegex().Replace(filename, "");
            //             Принимает строку filename, представляющую собой имя файла, которое необходимо очистить.
            // Использует EscapeRegex().Replace(filename, "") для замены всех запрещенных символов на пустую строку, тем самым удаляя их из имени файла.
            // Возвращает "очищенное" имя файла, без символов, которые могут вызвать проблемы при использовании в файловой системе.
        }
        //Таким образом, PathHelper.ToSafeName предоставляет удобный способ гарантировать, что имена файлов не содержат символов, которые могут быть неприемлемы или вызвать ошибки при создании, чтении или записи файлов в файловой системе.
    }
}